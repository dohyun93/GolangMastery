package main

import "fmt"

func main() {
	fmt.Println()
	// 인터페이스는 '상호작용'할 수 있는 접점이다.
	// 인터페이스를 이용하면 추상화된 객체로 상호작용할 수 있다.

}

// 인터페이스 선언은 아래처럼 할 수 있다.

// 인터페이스도 구조체처럼 '타입'중 하나이기 때문에, type을 써줘야 한다.
// 즉, 인터페이스도 변수 선언이 가능하고, 변수의 값으로 사용할 수 있다.

// 다만, 아래 인터페이스에서 알 수 있듯이, 메서드 집합을 써줄 때 세 가지 유의사항이 있다.
// 1. 메서드는 반드시 메서드 명이 있다.
// 2. 매개변수와 반환이 다르더라도 '이름'이 같은 메서드가 존재할 수 없다.
// 3. 인터페이스에서는 메서드 구현을 포함하지 않는다.
type DuckInterface interface {
	// 인터페이스 밑에 메서드들을 넣을 수 있다.
	Fly()
	Walk(distance int) int
	// _(x int) -> 메서드는 반드시 이름이 있어야 한다.
}

type Stringer interface {
	String() string
}
